// Delete from a Binary Search Tree

class Solution {
    public TreeNode nextChild(TreeNode root){
        if(root.left==null){
            return root.right;
        }
        if(root.right==null){
            return root.left;
        }
        else{
            TreeNode rightchild = root.right;
            TreeNode lastRight = findPredicessor(root.left);
            lastRight.right = rightchild;
            return root.left;
        }
    }

    public TreeNode findPredicessor(TreeNode root){
        if(root.right==null){
            return root;
        }
        return findPredicessor(root.right);
    }

    public TreeNode deleteNode(TreeNode root, int key) {
        if(root==null){
            return null;
        }
        if(root.val == key){
            return nextChild(root);
        }
        TreeNode d = root;
        while(root!=null){
            if(key<root.val){
                if(root.left!=null && root.left.val==key){
                    root.left = nextChild(root.left);
                    break;
                }
                else{
                    root = root.left;
                }
            }
            else{
                if(root.right!=null && root.right.val==key){
                    root.right = nextChild(root.right);
                    break;
                }
                else{
                    root = root.right;
                }
            }
        }
        return d;
    }
}
