// Binary Tree Right Side View

class Solution {
    public int height(TreeNode root){
        if(root == null){
            return 0;
        }

        int left = height(root.left);
        int right = height(root.right);
        return Math.max(left,right)+1;
    }
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> l = new ArrayList<Integer>();
        int h = height(root);
        for(int i=0;i<h;i++){
            List<Integer> li = new ArrayList<Integer>();
            li = addLevel(root, i, li);
            l.add(li.get(li.size()-1));
        }
        return l;
    }
    public List<Integer> addLevel(TreeNode root, int level, List<Integer> list){
        if(root == null){
            return list;
        }
        if(level == 0){
            list.add(root.val);
            return list;
        }
        else{
            addLevel(root.left, level-1, list);
            addLevel(root.right, level-1, list);
        }
        return list;
    }
}
